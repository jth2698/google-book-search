{"version":3,"sources":["components/NavBar/index.js","utils/API.js","pages/Search.js","pages/Saved.js","App.js","registerServiceWorker.js","index.js"],"names":["useStyles","makeStyles","theme","appBar","borderBottom","palette","divider","toolbar","flexWrap","toolbarTitle","flexGrow","link","margin","spacing","NavBar","classes","AppBar","position","className","Toolbar","Typography","variant","color","noWrap","Link","href","require","config","APIKEY","process","API_KEY","query","axios","get","id","delete","bookData","post","heroContent","backgroundColor","background","paper","padding","cardGrid","paddingTop","paddingBottom","card","height","display","flexDirection","cardMedia","cardContent","minHeight","expand","transform","marginLeft","transition","transitions","create","duration","shortest","Search","useState","books","setBooks","setQuery","React","expanded","setExpanded","handleExpandClick","Container","maxWidth","component","align","gutterBottom","form","noValidate","TextField","required","fullWidth","label","name","autoFocus","onChange","value","target","console","log","Button","type","submit","onClick","e","preventDefault","API","then","res","newBooks","data","items","filter","book","undefined","volumeInfo","imageLinks","title","authors","description","previewLink","map","result","image","thumbnail","catch","err","handleSearch","length","Grid","container","item","xs","sm","md","Card","CardActionArea","CardMedia","CardContent","CardActions","size","dbBook","handleSave","IconButton","clsx","expandOpen","aria-expanded","aria-label","Collapse","in","timeout","unmountOnExit","paragraph","Saved","loadBooks","useEffect","_id","App","exact","path","isLocalhost","Boolean","window","location","hostname","match","registerValidSW","swUrl","navigator","serviceWorker","register","registration","onupdatefound","installingWorker","installing","onstatechange","state","controller","error","ReactDOM","render","document","getElementById","URL","origin","addEventListener","fetch","response","status","headers","indexOf","ready","unregister","reload","checkValidServiceWorker","registerServiceWorker"],"mappings":"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","file":"static/js/main.b50733f6.chunk.js","sourcesContent":["import React from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport AppBar from '@material-ui/core/AppBar';\r\nimport Toolbar from '@material-ui/core/Toolbar';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Link from '@material-ui/core/Link';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    appBar: {\r\n        borderBottom: `1px solid ${theme.palette.divider}`,\r\n    },\r\n    toolbar: {\r\n        flexWrap: 'wrap',\r\n    },\r\n    toolbarTitle: {\r\n        flexGrow: 1,\r\n    },\r\n    link: {\r\n        margin: theme.spacing(1, 1.5),\r\n    }\r\n}));\r\n\r\nexport default function NavBar() {\r\n\r\n    const classes = useStyles();\r\n\r\n    return (\r\n        <AppBar position=\"relative\" className={classes.appBar}>\r\n            <Toolbar className={classes.toolbar}>\r\n                <Typography variant=\"h6\" color=\"inherit\" noWrap className={classes.toolbarTitle}>\r\n                    (React) Google Books Search\r\n                </Typography>\r\n                <nav>\r\n                    <Link variant=\"button\" color=\"textPrimary\" href=\"/search\" className={classes.link}>\r\n                        Search\r\n                    </Link>\r\n                    <Link variant=\"button\" color=\"textPrimary\" href=\"/saved\" className={classes.link}>\r\n                        Saved\r\n                    </Link>\r\n                </nav>\r\n            </Toolbar>\r\n        </AppBar>\r\n    )\r\n}","require('dotenv').config();\r\n\r\nimport axios from \"axios\";\r\nconst BASEURL = \"https://www.googleapis.com/books/v1/volumes?q=\";\r\nconst APIKEY = `&key${process.env.API_KEY}`;\r\n\r\nexport default {\r\n    // Search GoogleBooks\r\n    searchBooks: function (query) {\r\n        return axios.get(BASEURL + query + APIKEY)\r\n    },\r\n    // Gets all books\r\n    getBooks: function () {\r\n        return axios.get(\"/api/books\");\r\n    },\r\n    // Gets the book with the given id\r\n    getBook: function (id) {\r\n        return axios.get(\"/api/books/\" + id);\r\n    },\r\n    // Deletes the book with the given id\r\n    deleteBook: function (id) {\r\n        return axios.delete(\"/api/books/\" + id);\r\n    },\r\n    // Saves a book to the database\r\n    saveBook: function (bookData) {\r\n        return axios.post(\"/api/books\", bookData);\r\n    }\r\n};","import React, { useState, useEffect } from \"react\";\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport API from \"../utils/API\";\r\nimport Container from '@material-ui/core/Container';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Button from '@material-ui/core/Button';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport Card from '@material-ui/core/Card';\r\nimport CardActionArea from '@material-ui/core/CardActionArea';\r\nimport CardMedia from '@material-ui/core/CardMedia';\r\nimport CardContent from '@material-ui/core/CardContent';\r\nimport CardActions from '@material-ui/core/CardActions';\r\nimport Collapse from '@material-ui/core/Collapse';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport clsx from 'clsx';\r\nimport ExpandMoreIcon from '@material-ui/icons/ExpandMore';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    heroContent: {\r\n        backgroundColor: theme.palette.background.paper,\r\n        padding: theme.spacing(8, 0, 6),\r\n    },\r\n    cardGrid: {\r\n        paddingTop: theme.spacing(8),\r\n        paddingBottom: theme.spacing(8),\r\n    },\r\n    card: {\r\n        height: '100%',\r\n        display: 'flex',\r\n        flexDirection: 'column',\r\n    },\r\n    cardMedia: {\r\n        height: 400,\r\n        paddingTop: '56.25%', // 16:9\r\n    },\r\n    cardContent: {\r\n        flexGrow: 1,\r\n        minHeight: 150,\r\n    },\r\n    expand: {\r\n        transform: 'rotate(0deg)',\r\n        marginLeft: 'auto',\r\n        transition: theme.transitions.create('transform', {\r\n            duration: theme.transitions.duration.shortest,\r\n        }),\r\n    },\r\n}));\r\n\r\nfunction Search() {\r\n\r\n    const classes = useStyles();\r\n\r\n    const [books, setBooks] = useState([]);\r\n    const [query, setQuery] = useState(\"\");\r\n    const [expanded, setExpanded] = React.useState(false);\r\n\r\n    function handleInputChange({ target }) {\r\n        const { value } = target;\r\n        setQuery(value);\r\n        console.log(query);\r\n    };\r\n\r\n    function handleSearch(e) {\r\n        e.preventDefault();\r\n        API.searchBooks(query)\r\n            .then(res => {\r\n                setBooks([]);\r\n                const qualifyingResults = res.data.items.filter(book =>\r\n                    book.id !== undefined &&\r\n                    book.volumeInfo.imageLinks !== undefined &&\r\n                    book.volumeInfo.title !== undefined &&\r\n                    book.volumeInfo.authors !== undefined &&\r\n                    book.volumeInfo.description !== undefined &&\r\n                    book.volumeInfo.previewLink !== undefined\r\n                );\r\n                const newBooks = qualifyingResults.map(result => {\r\n                    return ({\r\n                        id: result.id,\r\n                        image: result.volumeInfo.imageLinks.thumbnail,\r\n                        title: result.volumeInfo.title,\r\n                        authors: result.volumeInfo.authors,\r\n                        description: result.volumeInfo.description,\r\n                        link: result.volumeInfo.previewLink\r\n                    })\r\n                });\r\n                setBooks([...newBooks])\r\n            })\r\n            .catch(err => console.log(err));\r\n    };\r\n\r\n    function handleSave(e, id) {\r\n        e.preventDefault();\r\n        const dbBook = books.filter(book => book.id === id);\r\n        API.saveBook(dbBook);\r\n    };\r\n\r\n    const handleExpandClick = () => {\r\n        setExpanded(!expanded);\r\n    };\r\n\r\n    return (\r\n        <Container>\r\n            {/* Hero unit */}\r\n            <div className={classes.heroContent}>\r\n                <Container maxWidth=\"sm\">\r\n                    <Typography component=\"h1\" variant=\"h2\" align=\"center\" color=\"textPrimary\" gutterBottom>\r\n                        Book Search\r\n                    </Typography>\r\n                    <form className={classes.form} noValidate>\r\n                        <TextField\r\n                            variant=\"outlined\"\r\n                            margin=\"normal\"\r\n                            required\r\n                            fullWidth\r\n                            id=\"serach\"\r\n                            label=\"Search for a Book\"\r\n                            name=\"search\"\r\n                            autoFocus\r\n                            onChange={handleInputChange}\r\n                        />\r\n                        <Button\r\n                            type=\"submit\"\r\n                            fullWidth\r\n                            variant=\"contained\"\r\n                            color=\"primary\"\r\n                            className={classes.submit}\r\n                            onClick={(e) => handleSearch(e)}\r\n                        >\r\n                            Search\r\n                        </Button>\r\n                    </form>\r\n                </Container>\r\n            </div>\r\n            <Container className={classes.cardGrid} maxWidth=\"md\">\r\n                {/* End hero unit */}\r\n                {books.length ? (\r\n                    <Grid container spacing={4}>\r\n                        {books.map((book) => (\r\n                            <Grid item key={book.id} xs={12} sm={6} md={4}>\r\n                                <Card className={classes.card}>\r\n                                    <CardActionArea>\r\n                                        <CardMedia\r\n                                            className={classes.cardMedia}\r\n                                            image={book.image}\r\n                                        />\r\n                                        <CardContent className={classes.cardContent}>\r\n                                            <Typography gutterBottom variant=\"h5\" component=\"h2\">\r\n                                                {book.title}\r\n                                            </Typography>\r\n                                        </CardContent>\r\n                                        <CardActions>\r\n                                            <Button\r\n                                                size=\"small\"\r\n                                                color=\"primary\"\r\n                                                href={book.link}>\r\n                                                View\r\n                                        </Button>\r\n                                            <Button\r\n                                                size=\"small\"\r\n                                                color=\"primary\"\r\n                                                onClick={(e) => {\r\n                                                    handleSave(e, book.id)\r\n                                                }}>\r\n                                                Save\r\n                                        </Button>\r\n                                            <IconButton\r\n                                                className={clsx(classes.expand, {\r\n                                                    [classes.expandOpen]: expanded,\r\n                                                })}\r\n                                                onClick={handleExpandClick}\r\n                                                aria-expanded={expanded}\r\n                                                aria-label=\"show more\"\r\n                                            >\r\n                                                <ExpandMoreIcon />\r\n                                            </IconButton>\r\n                                        </CardActions>\r\n                                        <Collapse in={expanded} timeout=\"auto\" unmountOnExit>\r\n                                            <CardContent>\r\n                                                <Typography paragraph>\r\n                                                    {book.description}\r\n                                                </Typography>\r\n                                            </CardContent>\r\n                                        </Collapse>\r\n                                    </CardActionArea>\r\n                                </Card>\r\n                            </Grid>\r\n                        ))}\r\n                    </Grid>\r\n                ) : (\r\n                        <h5 className=\"text-center\">No Results to Display...Yet</h5>\r\n\r\n                    )}\r\n            </Container>\r\n        </Container>\r\n    )\r\n};\r\n\r\n\r\nexport default Search;","import React, { useState, useEffect } from \"react\";\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport API from \"../utils/API\";\r\nimport Container from '@material-ui/core/Container';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Button from '@material-ui/core/Button';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport Card from '@material-ui/core/Card';\r\nimport CardActionArea from '@material-ui/core/CardActionArea';\r\nimport CardMedia from '@material-ui/core/CardMedia';\r\nimport CardContent from '@material-ui/core/CardContent';\r\nimport CardActions from '@material-ui/core/CardActions';\r\nimport Collapse from '@material-ui/core/Collapse';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport clsx from 'clsx';\r\nimport ExpandMoreIcon from '@material-ui/icons/ExpandMore';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    heroContent: {\r\n        backgroundColor: theme.palette.background.paper,\r\n        padding: theme.spacing(8, 0, 6),\r\n    },\r\n    cardGrid: {\r\n        paddingTop: theme.spacing(8),\r\n        paddingBottom: theme.spacing(8),\r\n    },\r\n    card: {\r\n        height: '100%',\r\n        display: 'flex',\r\n        flexDirection: 'column',\r\n    },\r\n    cardMedia: {\r\n        height: 400,\r\n        paddingTop: '56.25%', // 16:9\r\n    },\r\n    cardContent: {\r\n        flexGrow: 1,\r\n        minHeight: 150,\r\n    },\r\n    expand: {\r\n        transform: 'rotate(0deg)',\r\n        marginLeft: 'auto',\r\n        transition: theme.transitions.create('transform', {\r\n            duration: theme.transitions.duration.shortest,\r\n        }),\r\n    },\r\n}));\r\n\r\nfunction Saved() {\r\n\r\n    const classes = useStyles();\r\n\r\n    const [books, setBooks] = useState([]);\r\n    const [expanded, setExpanded] = React.useState(false);\r\n\r\n    useEffect(() => {\r\n        loadBooks()\r\n    }, []);\r\n\r\n    function loadBooks() {\r\n        API.getBooks()\r\n            .then(res => setBooks(res.data))\r\n            .catch(err => console.log(err))\r\n    };\r\n\r\n    function handleDelete(id) {\r\n        API.deleteBook(id)\r\n            .then(res => loadBooks())\r\n            .catch(err => console.log(err))\r\n    };\r\n\r\n    const handleExpandClick = () => {\r\n        setExpanded(!expanded);\r\n    };\r\n\r\n    return (\r\n        <Container>\r\n            {/* Hero unit */}\r\n            <div className={classes.heroContent}>\r\n                <Container maxWidth=\"sm\">\r\n                    <Typography component=\"h1\" variant=\"h2\" align=\"center\" color=\"textPrimary\" gutterBottom>\r\n                        Saved Books\r\n                    </Typography>\r\n                </Container>\r\n            </div>\r\n            <Container className={classes.cardGrid} maxWidth=\"md\">\r\n                {/* End hero unit */}\r\n                {books.length ? (\r\n                    <Grid container spacing={4}>\r\n                        {books.map((book) => (\r\n                            <Grid item key={book.id} xs={12} sm={6} md={4}>\r\n                                <Card className={classes.card}>\r\n                                    <CardActionArea>\r\n                                        <CardMedia\r\n                                            className={classes.cardMedia}\r\n                                            image={book.image}\r\n                                        />\r\n                                        <CardContent className={classes.cardContent}>\r\n                                            <Typography gutterBottom variant=\"h5\" component=\"h2\">\r\n                                                {book.title}\r\n                                            </Typography>\r\n                                        </CardContent>\r\n                                        <CardActions>\r\n                                            <Button\r\n                                                size=\"small\"\r\n                                                color=\"primary\"\r\n                                                href={book.link}>\r\n                                                View\r\n                                            </Button>\r\n                                            <Button\r\n                                                size=\"small\"\r\n                                                color=\"primary\"\r\n                                                onClick={() => handleDelete(book._id)}>\r\n                                                Delete\r\n                                            </Button>\r\n                                            <IconButton\r\n                                                className={clsx(classes.expand, {\r\n                                                    [classes.expandOpen]: expanded,\r\n                                                })}\r\n                                                onClick={handleExpandClick}\r\n                                                aria-expanded={expanded}\r\n                                                aria-label=\"show more\"\r\n                                            >\r\n                                                <ExpandMoreIcon />\r\n                                            </IconButton>\r\n                                        </CardActions>\r\n                                        <Collapse in={expanded} timeout=\"auto\" unmountOnExit>\r\n                                            <CardContent>\r\n                                                <Typography paragraph>\r\n                                                    {book.description}\r\n                                                </Typography>\r\n                                            </CardContent>\r\n                                        </Collapse>\r\n                                    </CardActionArea>\r\n                                </Card>\r\n                            </Grid>\r\n                        ))}\r\n                    </Grid>\r\n                ) : (\r\n                        <h5 className=\"text-center\">No Saved Books to Display...Yet</h5>\r\n\r\n                    )}\r\n            </Container>\r\n        </Container>\r\n    )\r\n};\r\n\r\nexport default Saved;","import React from \"react\";\nimport { BrowserRouter, Switch, Route } from \"react-router-dom\";\nimport NavBar from \"./components/NavBar\";\nimport Search from \"./pages/Search\";\nimport Saved from \"./pages/Saved\";\n\nfunction App() {\n    return (\n        <BrowserRouter>\n            <div>\n                <NavBar />\n                <Switch>\n                    <Route exact path={[\"/\", \"/search\"]}>\n                        <Search />\n                    </Route>\n                    <Route exact path={[\"/\", \"/saved\"]}>\n                        <Saved />\n                    </Route>\n                </Switch>\n            </div>\n        </BrowserRouter>\n    );\n}\n\n\nexport default App;\n","// In production, we register a service worker to serve assets from local cache.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on the \"N+1\" visit to a page, since previously\n// cached resources are updated in the background.\n\n// To learn more about the benefits of this model, read https://goo.gl/KwvDNy.\n// This link also includes instructions on opting out of this behavior.\n\nconst isLocalhost = Boolean(\n    window.location.hostname === \"localhost\" ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === \"[::1]\" ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n        /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport default function register() {\n    if (process.env.NODE_ENV === \"production\" && \"serviceWorker\" in navigator) {\n        // The URL constructor is available in all browsers that support SW.\n        const publicUrl = new URL(process.env.PUBLIC_URL, window.location);\n        if (publicUrl.origin !== window.location.origin) {\n            // Our service worker won't work if PUBLIC_URL is on a different origin\n            // from what our page is served on. This might happen if a CDN is used to\n            // serve assets; see https://github.com/facebookincubator/create-react-app/issues/2374\n            return;\n        }\n\n        window.addEventListener(\"load\", () => {\n            const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n            if (!isLocalhost) {\n                // Is not local host. Just register service worker\n                registerValidSW(swUrl);\n            } else {\n                // This is running on localhost. Lets check if a service worker still exists or not.\n                checkValidServiceWorker(swUrl);\n            }\n        });\n    }\n}\n\nfunction registerValidSW(swUrl) {\n    navigator.serviceWorker\n        .register(swUrl)\n        .then(registration => {\n            registration.onupdatefound = () => {\n                const installingWorker = registration.installing;\n                installingWorker.onstatechange = () => {\n                    if (installingWorker.state === \"installed\") {\n                        if (navigator.serviceWorker.controller) {\n                            // At this point, the old content will have been purged and\n                            // the fresh content will have been added to the cache.\n                            // It's the perfect time to display a \"New content is\n                            // available; please refresh.\" message in your web app.\n                            console.log(\"New content is available; please refresh.\");\n                        } else {\n                            // At this point, everything has been precached.\n                            // It's the perfect time to display a\n                            // \"Content is cached for offline use.\" message.\n                            console.log(\"Content is cached for offline use.\");\n                        }\n                    }\n                };\n            };\n        })\n        .catch(error => {\n            console.error(\"Error during service worker registration:\", error);\n        });\n}\n\nfunction checkValidServiceWorker(swUrl) {\n    // Check if the service worker can be found. If it can't reload the page.\n    fetch(swUrl)\n        .then(response => {\n            // Ensure service worker exists, and that we really are getting a JS file.\n            if (\n                response.status === 404 ||\n                response.headers.get(\"content-type\").indexOf(\"javascript\") === -1\n            ) {\n                // No service worker found. Probably a different app. Reload the page.\n                navigator.serviceWorker.ready.then(registration => {\n                    registration.unregister().then(() => {\n                        window.location.reload();\n                    });\n                });\n            } else {\n                // Service worker found. Proceed as normal.\n                registerValidSW(swUrl);\n            }\n        })\n        .catch(() => {\n            console.log(\n                \"No internet connection found. App is running in offline mode.\"\n            );\n        });\n}\n\nexport function unregister() {\n    if (\"serviceWorker\" in navigator) {\n        navigator.serviceWorker.ready.then(registration => {\n            registration.unregister();\n        });\n    }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport registerServiceWorker from \"./registerServiceWorker\";\nimport 'bootstrap/dist/css/bootstrap.min.css';\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\nregisterServiceWorker();\n"],"sourceRoot":""}